From 5bca0163fd323d06a5cf9ad90b670019fe562441 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?I=C3=B1igo=20Mart=C3=ADnez?= <inigomartinez@gmail.com>
Date: Fri, 3 Nov 2017 19:07:40 +0100
Subject: [PATCH] Add build-api wrapper for Continuous

---
 configure | 263 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 263 insertions(+)
 create mode 100755 configure

diff --git a/configure b/configure
new file mode 100755
index 00000000..842c9696
--- /dev/null
+++ b/configure
@@ -0,0 +1,263 @@
+#!/bin/bash
+# configure script adapter for Meson
+# Based on build-api: https://github.com/cgwalters/build-api
+# Copyright 2010, 2011, 2013 Colin Walters <walters@verbum.org>
+# Copyright 2016, 2017 Emmanuele Bassi
+# Licensed under the new-BSD license (http://www.opensource.org/licenses/bsd-license.php)
+
+# Build API variables:
+
+# Little helper function for reading args from the commandline.
+# it automatically handles -a b and -a=b variants, and returns 1 if
+# we need to shift $3.
+read_arg() {
+    # $1 = arg name
+    # $2 = arg value
+    # $3 = arg parameter
+    local rematch='^[^=]*=(.*)$'
+    if [[ $2 =~ $rematch ]]; then
+	read "$1" <<< "${BASH_REMATCH[1]}"
+    else
+	read "$1" <<< "$3"
+	# There is no way to shift our callers args, so
+	# return 1 to indicate they should do it instead.
+	return 1
+    fi
+}
+
+sanitycheck() {
+    # $1 = arg name
+    # $1 = arg command
+    # $2 = arg alternates
+    local cmd=$( which $2 2>/dev/null )
+
+    if [ -x "$cmd" ]; then
+        read "$1" <<< "$cmd"
+        return 0
+    fi
+
+    test -z $3 || {
+        for alt in $3; do
+            cmd=$( which $alt 2>/dev/null )
+
+            if [ -x "$cmd" ]; then
+                read "$1" <<< "$cmd"
+                return 0
+            fi
+        done
+    }
+
+    echo -e "\e[1;31mERROR\e[0m: Command '$2' not found"
+    exit 1
+}
+
+sanitycheck MESON 'meson'
+sanitycheck MESONTEST 'mesontest'
+sanitycheck NINJA 'ninja' 'ninja-build'
+
+with_dbus_service_dir=''
+with_gio_module_dir=''
+with_systemduserunitdir=''
+with_tmpfilesdir=''
+enable_admin=''
+enable_afc=''
+enable_afp=''
+enable_archive=''
+enable_cdda=''
+enable_dnssd=''
+enable_gdu=''
+enable_goa=''
+enable_google=''
+enable_gphoto2=''
+enable_http=''
+enable_mtp=''
+enable_nfs=''
+enable_smb=''
+enable_udisks2=''
+enable_bluray=''
+enable_fuse=''
+enable_gcr=''
+enable_gudev=''
+enable_keyring=''
+enable_logind=''
+enable_libusb=''
+enable_devel_utils=''
+enable_installed_tests=''
+enable_man=''
+enable_programs=''
+
+while (($# > 0)); do
+    case "${1%%=*}" in
+	--prefix) read_arg prefix "$@" || shift;;
+	--bindir) read_arg bindir "$@" || shift;;
+	--sbindir) read_arg sbindir "$@" || shift;;
+	--libexecdir) read_arg libexecdir "$@" || shift;;
+	--datarootdir) read_arg datarootdir "$@" || shift;;
+	--datadir) read_arg datadir "$@" || shift;;
+	--sysconfdir) read_arg sysconfdir "$@" || shift;;
+	--libdir) read_arg libdir "$@" || shift;;
+	--mandir) read_arg mandir "$@" || shift;;
+	--includedir) read_arg includedir "$@" || shift;;
+	--with-dbus-service-dir) read_arg with_dbus_service_dir "$@" || shift;;
+	--with-gio-module-dir) read_arg with_gio_module_dir "$@" || shift;;
+	--with-systemduserunitdir) read_arg with_systemduserunitdir "$@" || shift;;
+	--with-tmpfilesdir) read_arg with_tmpfilesdir "$@" || shift;;
+	--enable-admin) enable_admin='-Denable-admin=true';;
+	--disable-admin) enable_admin='-Denable-admin=false';;
+	--enable-afc) enable_afc='-Denable-afc=true';;
+	--disable-afc) enable_afc='-Denable-afc=false';;
+	--enable-afp) enable_afp='-Denable-afp=true';;
+	--disable-afp) enable_afp='-Denable-afp=false';;
+	--enable-archive) enable_archive='-Denable-archive=true';;
+	--disable-archive) enable_archive='-Denable-archive=false';;
+	--enable-cdda) enable_cdda='-Denable-cdda=true';;
+	--disable-cdda) enable_cdda='-Denable-cdda=false';;
+	--enable-dnssd) enable_dnssd='-Denable-dnssd=true';;
+	--disable-dnssd) enable_dnssd='-Denable-dnssd=false';;
+	--enable-gdu) enable_gdu='-Denable-gdu=true';;
+	--disable-gdu) enable_gdu='-Denable-gdu=false';;
+	--enable-goa) enable_goa='-Denable-goa=true';;
+	--disable-goa) enable_goa='-Denable-goa=false';;
+	--enable-google) enable_google='-Denable-google=true';;
+	--disable-google) enable_google='-Denable-google=false';;
+	--enable-gphoto2) enable_gphoto2='-Denable-gphoto2=true';;
+	--disable-gphoto2) enable_gphoto2='-Denable-gphoto2=false';;
+	--enable-http) enable_http='-Denable-http=true';;
+	--disable-http) enable_http='-Denable-http=false';;
+	--enable-mtp) enable_mtp='-Denable-mtp=true';;
+	--disable-mtp) enable_mtp='-Denable-mtp=false';;
+	--enable-nfs) enable_nfs='-Denable-nfs=true';;
+	--disable-nfs) enable_nfs='-Denable-nfs=false';;
+	--enable-smb) enable_smb='-Denable-smb=true';;
+	--disable-smb) enable_smb='-Denable-smb=false';;
+	--enable-udisks2) enable_udisks2='-Denable-udisks2=true';;
+	--disable-udisks2) enable_udisks2='-Denable-udisks2=false';;
+	--enable-bluray) enable_bluray='-Denable-bluray=true';;
+	--disable-bluray) enable_bluray='-Denable-bluray=false';;
+	--enable-fuse) enable_fuse='-Denable-fuse=true';;
+	--disable-fuse) enable_fuse='-Denable-fuse=false';;
+	--enable-gcr) enable_gcr='-Denable-gcr=true';;
+	--disable-gcr) enable_gcr='-Denable-gcr=false';;
+	--enable-gudev) enable_gudev='-Denable-gudev=true';;
+	--disable-gudev) enable_gudev='-Denable-gudev=false';;
+	--enable-keyring) enable_keyring='-Denable-keyring=true';;
+	--disable-keyring) enable_keyring='-Denable-keyring=false';;
+	--enable-logind) enable_logind='-Denable-logind=true';;
+	--disable-logind) enable_logind='-Denable-logind=false';;
+	--enable-libusb) enable_libusb='-Denable-libusb=true';;
+	--disable-libusb) enable_libusb='-Denable-libusb=false';;
+	--enable-devel-utils) enable_devel_utils='-Denable-devel-utils=true';;
+	--disable-devel-utils) enable_devel_utils='-Denable-devel-utils=false';;
+	--enable-installed-tests) enable_installed_tests='-Denable-installed-tests=true';;
+	--disable-installed-tests) disable_installed_tests='-Denable-installed-tests=false';;
+	--enable-man) enable_man='-Denable-man=true';;
+	--disable-man) enable_man='-Denable-man=false';;
+	--enable-programs) enable_programs='-Denable-programs=true';;
+	--disable-programs) enable_programs='-Denable-programs=false';;
+	*) echo -e "\e[1;33mINFO\e[0m: Ignoring unknown option '$1'";;
+    esac
+    shift
+done
+
+# Defaults
+test -z ${prefix} && prefix="/usr/local"
+test -z ${bindir} && bindir=${prefix}/bin
+test -z ${sbindir} && sbindir=${prefix}/sbin
+test -z ${libexecdir} && libexecdir=${prefix}/bin
+test -z ${datarootdir} && datarootdir=${prefix}/share
+test -z ${datadir} && datadir=${datarootdir}
+test -z ${sysconfdir} && sysconfdir=${prefix}/etc
+test -z ${libdir} && libdir=${prefix}/lib
+test -z ${mandir} && mandir=${prefix}/share/man
+test -z ${includedir} && includedir=${prefix}/include
+
+# The source directory is the location of this file
+srcdir=$(dirname $0)
+
+# The build directory is the current location
+builddir=`pwd`
+
+# If we're calling this file from the source directory then
+# we automatically create a build directory and ensure that
+# both Meson and Ninja invocations are relative to that
+# location
+if [[ -f "${builddir}/meson.build" ]]; then
+  mkdir -p _build
+  builddir="${builddir}/_build"
+  NINJA_OPT="-C ${builddir}"
+fi
+
+# Wrapper Makefile for Ninja
+cat > Makefile <<END
+# Generated by configure; do not edit
+
+all:
+	CC="\$(CC)" CXX="\$(CXX)" ${NINJA} ${NINJA_OPT}
+
+install:
+	DESTDIR="\$(DESTDIR)" ${NINJA} ${NINJA_OPT} install
+
+check:
+	${MESONTEST} ${NINJA_OPT}
+END
+
+echo "Summary:"
+echo "  meson:....... ${MESON}"
+echo "  ninja:....... ${NINJA}"
+echo "  prefix:...... ${prefix}"
+echo "  bindir:...... ${bindir}"
+echo "  sbindir:..... ${sbindir}"
+echo "  libexecdir:.. ${libexecdir}"
+echo "  datarootdir:. ${datarootdir}"
+echo "  datadir:..... ${datadir}"
+echo "  sysconfdir:.. ${sysconfdir}"
+echo "  libdir:...... ${libdir}"
+echo "  mandir:...... ${mandir}"
+echo "  includedir:.. ${includedir}"
+echo "  additional:.."
+echo "    - ${with_dbus_service_dir} ${with_gio_module_dir} ${with_systemduserunitdir} ${with_tmpfilesdir} ${enable_admin} ${enable_afc} ${enable_afp} ${enable_archive} ${enable_cdda} ${enable_dnssd} ${enable_gdu} ${enable_goa} ${enable_google} ${enable_gphoto2} ${enable_http} ${enable_mtp} ${enable_nfs} ${enable_smb} ${enable_udisks2} ${enable_bluray} ${enable_fuse} ${enable_gcr} ${enable_gudev} ${enable_keyring} ${enable_logind} ${enable_libusb} ${enable_devel_utils} ${enable_installed_tests} ${enable_man} ${enable_programs}"
+
+exec ${MESON} \
+	--prefix=${prefix} \
+	--libdir=${libdir} \
+	--libexecdir=${libexecdir} \
+	--datadir=${datadir} \
+	--sysconfdir=${sysconfdir} \
+	--bindir=${bindir} \
+	--includedir=${includedir} \
+	--mandir=${mandir} \
+	--default-library shared \
+	${with_dbus_service_dir} \
+	${with_gio_module_dir} \
+	${with_systemduserunitdir} \
+	${with_tmpfilesdir} \
+	${enable_admin} \
+	${enable_afc} \
+	${enable_afp} \
+	${enable_archive} \
+	${enable_cdda} \
+	${enable_dnssd} \
+	${enable_gdu} \
+	${enable_goa} \
+	${enable_google} \
+	${enable_gphoto2} \
+	${enable_http} \
+	${enable_mtp} \
+	${enable_nfs} \
+	${enable_smb} \
+	${enable_udisks2} \
+	${enable_bluray} \
+	${enable_fuse} \
+	${enable_gcr} \
+	${enable_gudev} \
+	${enable_keyring} \
+	${enable_logind} \
+	${enable_libusb} \
+	${enable_devel_utils} \
+	${enable_installed_tests} \
+	${enable_man} \
+	${enable_programs} \
+	${builddir} \
+	${srcdir}
+
+# vim: ai ts=8 noet sts=2 ft=sh
-- 
2.15.0

