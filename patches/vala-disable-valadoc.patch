From d120130cfe6a400adc15083c94efad43798408be Mon Sep 17 00:00:00 2001
From: Emmanuele Bassi <ebassi@gnome.org>
Date: Wed, 9 Aug 2017 12:59:19 +0100
Subject: [PATCH] Allow disabling the build of valadoc

The Continuous build does not build documentation, and enabling valadoc
adds a Graphviz, and new and fairly complex dependency.

Let's disable the valadoc build, conditionally, instead.
---
 Makefile.am  | 20 ++++++++++++++++++
 configure.ac | 67 +++++++++++++++++++++++++++++++++++-------------------------
 2 files changed, 59 insertions(+), 28 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index e5dc0cc97..8a0491943 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -2,6 +2,21 @@ ACLOCAL_AMFLAGS = --install -I m4 ${ACLOCAL_FLAGS}
 
 NULL =
 
+DIST_SUBDIRS = \
+	gee \
+	vala \
+	ccode \
+	codegen \
+	compiler \
+	vapi \
+	tests \
+	doc \
+	gobject-introspection \
+	vapigen \
+	libvaladoc \
+	valadoc \
+	$(NULL)
+
 SUBDIRS = \
 	gee \
 	vala \
@@ -13,9 +28,14 @@ SUBDIRS = \
 	doc \
 	gobject-introspection \
 	vapigen \
+	$(NULL)
+
+if HAVE_LIBGVC
+SUBDIRS += \
 	libvaladoc \
 	valadoc \
 	$(NULL)
+endif
 
 if ENABLE_UNVERSIONED
 aclocaldir = $(datadir)/aclocal
diff --git a/configure.ac b/configure.ac
index c73d5d6b1..22f732888 100644
--- a/configure.ac
+++ b/configure.ac
@@ -98,34 +98,45 @@ PKG_CHECK_MODULES(GMODULE, gmodule-2.0 >= $GLIB_REQUIRED)
 AC_SUBST(GMODULE_CFLAGS)
 AC_SUBST(GMODULE_LIBS)
 
-PKG_CHECK_MODULES(LIBGVC, libgvc >= $LIBGVC_REQUIRED)
-AC_MSG_CHECKING([for CGRAPH])
-cgraph_tmp_LIBADD="$LIBADD"
-cgraph_tmp_CFLAGS="$CFLAGS"
-LIBADD="$LIBADD $LIBGVC_LIBS"
-CFLAGS="$CFLAGS $LIBGVC_CFLAGS"
-AC_RUN_IFELSE(
-	[AC_LANG_SOURCE([
-		#include <gvc.h>
-
-		int main(void) {
-			#ifdef WITH_CGRAPH
-				return 0;
-			#else
-				return -1;
-			#endif
-		}
-	])], [
-		AC_MSG_RESULT([yes])
-		VALAFLAGS="$VALAFLAGS -D WITH_CGRAPH"
-		have_cgraph=yes
-	], [
-		AC_MSG_RESULT([no])
-		have_cgraph=no
-	]
-)
-LIBADD="$cgraph_tmp_LIBADD"
-CFLAGS="$cgraph_tmp_CFLAGS"
+AC_ARG_ENABLE(valadoc, AS_HELP_STRING([--disable-valadoc], [Disable valadoc]), enable_valadoc=$enableval, enable_valadoc=yes)
+if test x$enable_valadoc != xno; then
+        PKG_CHECK_MODULES(LIBGVC, libgvc >= $LIBGVC_REQUIRED, have_gvc=yes, have_gvc=no)
+else
+        have_gvc=no
+fi
+
+AM_CONDITIONAL(HAVE_LIBGVC, test $have_gvc = yes)
+
+if test x$have_gvc = xyes; then
+        AC_MSG_CHECKING([for CGRAPH])
+        cgraph_tmp_LIBADD="$LIBADD"
+        cgraph_tmp_CFLAGS="$CFLAGS"
+        LIBADD="$LIBADD $LIBGVC_LIBS"
+        CFLAGS="$CFLAGS $LIBGVC_CFLAGS"
+        AC_RUN_IFELSE(
+	        [AC_LANG_SOURCE([
+		        #include <gvc.h>
+
+        		int main(void) {
+	        		#ifdef WITH_CGRAPH
+		        		return 0;
+			        #else
+        				return -1;
+	        		#endif
+		        }
+        	])], [
+	        	AC_MSG_RESULT([yes])
+		        VALAFLAGS="$VALAFLAGS -D WITH_CGRAPH"
+        		have_cgraph=yes
+	        ], [
+		        AC_MSG_RESULT([no])
+        		have_cgraph=no
+	        ]
+        )
+        LIBADD="$cgraph_tmp_LIBADD"
+        CFLAGS="$cgraph_tmp_CFLAGS"
+fi
+
 AM_CONDITIONAL(HAVE_CGRAPH, test "$have_cgraph" = "yes")
 
 AC_PATH_PROG([XSLTPROC], [xsltproc], :)
-- 
2.13.3

